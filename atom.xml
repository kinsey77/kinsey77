<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一路繁花相送</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-16T04:05:08.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>kinsey77</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React结合Google地图实现地图服务（二）</title>
    <link href="http://yoursite.com/2018/03/16/google-map-next/"/>
    <id>http://yoursite.com/2018/03/16/google-map-next/</id>
    <published>2018-03-16T03:16:07.000Z</published>
    <updated>2018-03-16T04:05:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章是上一篇的修改版本，之所以会有这个修改是因为遇到一个坑。公司的的项目线上访问地址的文件传输协议是https,但是国内版的googled地图访问方式<a href="http://maps.google.cn/maps/api/jshv，没错它是http的，自然会出现跨域的问题，瞬间就掉到坑底了。" target="_blank" rel="noopener">http://maps.google.cn/maps/api/jshv，没错它是http的，自然会出现跨域的问题，瞬间就掉到坑底了。</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>为了爬出这个坑，在资料堆了蹲了很久，最终找到了一个梯子爬了出来。<br>废弃掉前一篇文章使用的<strong>react-leaflet-google</strong>插件，使用加载google瓦片地图的方式去代替原来http的请求方式。</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>代码不需要大的更改，只需要修改下面部分的代码即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;LayersControl position=&apos;topright&apos;&gt;</span><br><span class="line">    &lt;BaseLayer checked name=&quot;road&quot;&#125;&gt;</span><br><span class="line">        &lt;TileLayer</span><br><span class="line">        url=&quot;https://mt2.google.cn/vt/lyrs=m&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;</span><br><span class="line">        maxZoom=&quot;18&quot;</span><br><span class="line">        minZoom=&quot;2&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;/BaseLayer&gt;</span><br><span class="line">    &lt;BaseLayer  name=&quot;terrain&quot;&#125;&gt;</span><br><span class="line">        &lt;TileLayer</span><br><span class="line">        url=&quot;https://mt2.google.cn/vt/lyrs=p&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;</span><br><span class="line">        maxZoom=&quot;18&quot;</span><br><span class="line">        minZoom=&quot;2&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;/BaseLayer&gt;</span><br><span class="line">    &lt;BaseLayer  name=&quot;satellite&quot;&#125;&gt;</span><br><span class="line">        &lt;TileLayer</span><br><span class="line">        url=&quot;https://mt2.google.cn/vt/lyrs=y&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;z=&#123;z&#125;&quot;</span><br><span class="line">        maxZoom=&quot;18&quot;</span><br><span class="line">        minZoom=&quot;2&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">    &lt;/BaseLayer&gt;</span><br><span class="line">    &#123;this.renderMarker()&#125; // 地图标记点方法，细节看上篇文章</span><br><span class="line">&lt;/LayersControl&gt;</span><br></pre></td></tr></table></figure></p><p>其实就是使用<strong>leaflet</strong>的Tilelayer组件去加载瓦片地图，url属性值即加载google瓦片地图的地址。其他属性设置参考<strong><a href="http://leafletjs.com/reference-1.3.0.html" target="_blank" rel="noopener">leaflet</a></strong> Api文档。<br>这种方式的除了填了我的坑之外，还有其它的好处。第一，使用加载的地图瓦片的方式加载地图，地图展示速度明显，之前可能会出现地图瓦片加载不出来并呈灰色的情况。第二,这种方式不仅可以加载google地图，还可以加载百度，高德，甚至是其它自定义的地图等等都可以，这里甩出一个<strong><a href="https://segmentfault.com/a/1190000011276788" target="_blank" rel="noopener">链接</a></strong>，可以去试试。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这篇文章是上一篇的修改版本，之所以会有这个修改是因为遇到一个坑。公司的的项目线上访问地址的文件传输协议是https,但是国内版的goog
      
    
    </summary>
    
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="Google-map" scheme="http://yoursite.com/tags/Google-map/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>React结合Google地图实现地图服务（一）</title>
    <link href="http://yoursite.com/2018/02/09/google-map/"/>
    <id>http://yoursite.com/2018/02/09/google-map/</id>
    <published>2018-02-09T09:32:47.000Z</published>
    <updated>2018-03-16T03:11:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开发背景"><a href="#开发背景" class="headerlink" title="开发背景"></a>开发背景</h2><p>所在的项目组用的前端开发框架是<strong>React</strong>，现在有需求要将Google地图嵌到页面中。最初的开发要求是做一个Demo，实现<strong>Google-maps</strong>的三个图层，根据经纬度标做出Marker标记，显示风场在地图上的分布，并实现项目的一些联动图表展示效果。</p><ul><li><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><h2 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h2>在已有的react项目中你需要安装以下插件</the></li></ul><ul><li><p><strong><a href="http://leafletjs.com/reference-1.3.0.html" target="_blank" rel="noopener">leaflet</a></strong>是一个为建设交互性好适用于移动设备地图的领先开源JavaScript库。</p></li><li><p><strong><a href="https://react-leaflet.js.org" target="_blank" rel="noopener">react-leaflet</a></strong>是对<strong>leaflet</strong>库做了react语法化集成处理，更加符合react项目进行开发，并且依赖于leaflet。</p></li><li><p><strong><a href="https://github.com/Charmatzis/react-leaflet-google" target="_blank" rel="noopener">react-leaflet-google</a></strong>是<strong>react-leaflet</strong>的一个第三方插件(这里因为项目值只需要集成Google地图服务，所以只用到react-leaflet-google这个插件。如果你有更多的需求，react-leaflet还有更多的<a href="https://react-leaflet.js.org/docs/en/plugins.html" target="_blank" rel="noopener">第三方插件</a>可以满足你的需求)，可以将Google地图图层嵌到leaflet地图图层中；另外你也可以不用leaflet的图层，只用Google地图。</p></li><li><p>在使用Google地图之前你需要去官网申请一个密钥key(具体方法可看<a href="https://developers.google.cn/maps/documentation/javascript/get-api-key" target="_blank" rel="noopener">文档</a>)，才可以使用Google地图服务,下面将会用到。</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install leaflet react-leaglet react-leaflet-google --save</span><br></pre></td></tr></table></figure><ul><li>这里还有一点需要注意，除了以上插件外你还需要安装<strong>google-maps</strong>地图插件，否则会报错。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install google-maps --save</span><br></pre></td></tr></table></figure><h2 id="项目开发"><a href="#项目开发" class="headerlink" title="项目开发"></a>项目开发</h2><p>安装好以上插件后就可以在项目里新建一个组件，粘贴下面的Demo代码,就可以看到一个简单的实例了。</p><p>Demo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;;</span><br><span class="line"></span><br><span class="line">import &#123;</span><br><span class="line">    Map,</span><br><span class="line">    TileLayer, </span><br><span class="line">    LayersControl, </span><br><span class="line">    Marker, </span><br><span class="line">    Popup, </span><br><span class="line">    Tooltip </span><br><span class="line">&#125; from &apos;react-leaflet&apos;</span><br><span class="line"></span><br><span class="line">import &#123; GoogleLayer &#125; from &apos;react-leaflet-google&apos;</span><br><span class="line"></span><br><span class="line">const &#123; BaseLayer &#125; = LayersControl;</span><br><span class="line">const key = &apos;####&apos;; // 这里填入你在Google地图服务申请的密钥key</span><br><span class="line">//下面是Google地图的三种类型</span><br><span class="line">const terrain = &apos;TERRAIN&apos;;</span><br><span class="line">const road = &apos;ROADMAP&apos;;</span><br><span class="line">const satellite = &apos;SATELLITE&apos;;</span><br><span class="line"></span><br><span class="line">export default class EnlightMap extends React.Component &#123;</span><br><span class="line">    constructor(props) &#123;</span><br><span class="line">        super(props);</span><br><span class="line">        this.state = &#123;</span><br><span class="line">            zoom: 10</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        const center = [51.505, -0.09];</span><br><span class="line">        let styleObj = &#123;width: &apos;100%&apos;, height: &apos;100%&apos;&#125;;</span><br><span class="line">        return (</span><br><span class="line">            &lt;Map center=&#123;center&#125; zoom=&#123;this.state.zoom&#125; zoomControl=&#123;true&#125; style=&#123;styleObj&#125;&gt;</span><br><span class="line">                &lt;LayersControl position=&apos;topright&apos;&gt;</span><br><span class="line">                    &lt;BaseLayer checked name=&apos;Google Maps Roads&apos;&gt;</span><br><span class="line">                        &lt;GoogleLayer googlekey=&#123;key&#125;  maptype=&#123;road&#125;/&gt;</span><br><span class="line">                    &lt;/BaseLayer&gt;</span><br><span class="line">                    &lt;BaseLayer  name=&apos;Google Maps Terrain&apos;&gt;</span><br><span class="line">                        &lt;GoogleLayer googlekey=&#123;key&#125;  maptype=&#123;terrain&#125; /&gt;</span><br><span class="line">                    &lt;/BaseLayer&gt;</span><br><span class="line">                    &lt;BaseLayer  name=&apos;Google Maps Satellite&apos;&gt;</span><br><span class="line">                        &lt;GoogleLayer googlekey=&#123;key&#125;  maptype=&#123;satellite&#125; /&gt;</span><br><span class="line">                    &lt;/BaseLayer&gt;</span><br><span class="line">                    &#123;this.renderMarker()&#125;</span><br><span class="line">                &lt;/LayersControl&gt;</span><br><span class="line">            &lt;/Map&gt;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    renderMarker() &#123; // 根据经纬度标记出点</span><br><span class="line">        const markers = this.props.markers || [</span><br><span class="line">            &#123; key: &apos;marker1&apos;, position: [51.5, -0.1], children: &apos;My first popup&apos; &#125;,</span><br><span class="line">            &#123; key: &apos;marker2&apos;, position: [51.51, -0.1], children: &apos;My second popup&apos; &#125;,</span><br><span class="line">            &#123; key: &apos;marker3&apos;, position: [51.49, -0.05], children: &apos;My third popup&apos; &#125;,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        let marker = markers.map( (col) =&gt; &#123;</span><br><span class="line">            return (</span><br><span class="line">                &lt;Marker position=&#123;col.position&#125; key=&#123;col.key&#125; &gt;</span><br><span class="line">                    &lt;Popup&gt;</span><br><span class="line">                        &lt;span&gt;</span><br><span class="line">                        &#123;col.children&#125;</span><br><span class="line">                        &lt;/span&gt;</span><br><span class="line">                    &lt;/Popup&gt;</span><br><span class="line">                    &lt;Tooltip&gt;</span><br><span class="line">                        &lt;span&gt;&#123;col.key&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/Tooltip&gt;</span><br><span class="line">                &lt;/Marker&gt;</span><br><span class="line">            )</span><br><span class="line">        &#125;)</span><br><span class="line">        return marker;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li><p>因为Google是国外的，所以你访问谷歌地图需要翻墙。不过现在Google地图提供了国内版，你可以使用<strong><a href="https://developers.google.cn/maps/documentation/javascript/tutorial" target="_blank" rel="noopener">国内的访问地址</a></strong>去访问地图api.<br>但是在哪更改这个访问地址呢？你需要在node_modules里找到<strong>google-maps</strong>依赖包，然后在Google.js文件里面找到<strong>GoogleMapsLoader.URL</strong>，将其值改为<strong><a href="http://maps.google.cn/maps/api/js" target="_blank" rel="noopener">http://maps.google.cn/maps/api/js</a></strong>就可以。</p></li><li><p>如果你想要更改Google地图的配置参数，你需要在node_modules里找到<strong>react-leaflet-google</strong>依赖包，然后在leaflet.google.js文件里更改options对象的参数即可，具体看上面的<strong><a href="http://leafletjs.com/reference-1.3.0.html" target="_blank" rel="noopener">leaflet</a></strong> Api文档。</p></li></ul><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>下面提供一个方法，可以根据最大经度差或者最大维度差自定义第一次加载地图时的缩放比例Zoom。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">getRoom(diff)&#123; //参数为最大经度差或者维度差 </span><br><span class="line">    let room = new Array(0, 1, 2, 3, 4, 5, 6,7 , 8, 9, 10, 11, 12, 13, 14);  </span><br><span class="line">    let diffArr = new Array(360, 180, 90, 45, 22, 11, 5, 2.5, 1.25, 0.6, 0.3, 0.15, 0.07, 0.03, 0); </span><br><span class="line">    let zoom = &apos;&apos;;</span><br><span class="line">    diffArr.some( (col, i) =&gt; &#123; </span><br><span class="line">        if((diff - col) &gt;= 0)&#123; </span><br><span class="line">            zoom = room[i];</span><br><span class="line">            return true  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;)</span><br><span class="line">    return zoom     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;开发背景&quot;&gt;&lt;a href=&quot;#开发背景&quot; class=&quot;headerlink&quot; title=&quot;开发背景&quot;&gt;&lt;/a&gt;开发背景&lt;/h2&gt;&lt;p&gt;所在的项目组用的前端开发框架是&lt;strong&gt;React&lt;/strong&gt;，现在有需求要将Google地图嵌到页面中。最初的开发要求是做一个Demo，实现&lt;strong&gt;Google-maps&lt;/strong&gt;的三个图层，根据经纬度标做出Marker标记，显示风场在地图上的分布，并实现项目的一些联动图表展示效果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="Google-map" scheme="http://yoursite.com/tags/Google-map/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/02/01/hello-world/"/>
    <id>http://yoursite.com/2018/02/01/hello-world/</id>
    <published>2018-02-01T02:27:12.000Z</published>
    <updated>2018-02-11T07:57:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><ul><li><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2></the></li></ul><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
